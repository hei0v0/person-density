{"ast":null,"code":"var _jsxFileName = \"D:\\\\Zry\\\\Works\\\\person-density\\\\src\\\\compoenets\\\\ReactRightBarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReactRightBarChart(props) {\n  _s();\n  let valdata = [102, 150, 210, 193]; // 总人数\n  let titleNames = [\"三月\", \"六月\", \"九月\", \"十二月\"];\n  let data = [70, 34, 60, 78]; // 占比\n  let myColor = [\"#1089E7\", \"#F57474\", \"#56D0E3\", \"#F8B448\", \"#8B78F6\"];\n  const DEFAULT_OPTION = {\n    color: [\"#2f89cf\"],\n    tooltip: {\n      trigger: \"axis\",\n      axisPointer: {\n        // 坐标轴指示器，坐标轴触发有效\n        type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n      }\n    },\n\n    grid: {\n      left: \"22%\",\n      top: \"10%\",\n      bottom: \"10%\"\n    },\n    xAxis: [{\n      show: false\n    }],\n    yAxis: [{\n      show: true,\n      inverse: true,\n      data: titleNames,\n      // y轴本身的线\n      axisLine: {\n        show: false\n      },\n      // 不显示刻度\n      axisTick: {\n        show: false\n      },\n      // y轴分割线\n      splitLine: {\n        show: false\n      },\n      axisLabel: {\n        color: \"#fff\",\n        rish: {\n          lg: {\n            backgroundColor: \"#339911\",\n            color: \"#fff\",\n            borderRadius: 15,\n            // padding: 5,\n            align: \"center\",\n            width: 15,\n            height: 15\n          }\n        }\n      }\n    }, {\n      show: true,\n      inverse: true,\n      data: valdata,\n      axisLabel: {\n        textStyle: {\n          fontSize: 12,\n          color: \"#fff\"\n        }\n      }\n    }],\n    series: [{\n      name: \"条\",\n      type: \"bar\",\n      yAxisIndex: 0,\n      data: data,\n      // 柱子之间的距离\n      barCategoryGap: 50,\n      // 柱子的宽度\n      barWidth: 10,\n      // 柱子的样式\n      itemStyle: {\n        normal: {\n          barBorderRadius: 20,\n          // 柱子的颜色\n          color: function (params) {\n            let num = myColor.length;\n            return myColor[params.dataIndex % num];\n          }\n        }\n      },\n      // 图形上的文字\n      label: {\n        normal: {\n          show: true,\n          // 在内部显示\n          position: \"inside\",\n          // {c} 会自动解析为 data里面的数据\n          formatter: \"{c}%\"\n        }\n      }\n    }, {\n      name: \"框\",\n      type: \"bar\",\n      yAxisIndex: 1,\n      barCategoryGap: 50,\n      data: [100, 100, 100, 100, 100],\n      barWidth: 15,\n      itemStyle: {\n        normal: {\n          color: \"none\",\n          borderColor: \"#00c1de\",\n          borderWidth: 3,\n          barBorderRadius: 15\n        }\n      }\n    }]\n  };\n  const [option, setOption] = useState(DEFAULT_OPTION);\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: option,\n    style: {\n      width: 300,\n      height: 300,\n      minWidth: 300\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 12\n  }, this);\n}\n_s(ReactRightBarChart, \"56nEJS/jXIrZjybQsnH0H/X97Qg=\");\n_c = ReactRightBarChart;\n;\nvar _c;\n$RefreshReg$(_c, \"ReactRightBarChart\");","map":{"version":3,"names":["React","useState","useEffect","ReactECharts","ReactRightBarChart","props","valdata","titleNames","data","myColor","DEFAULT_OPTION","color","tooltip","trigger","axisPointer","type","grid","left","top","bottom","xAxis","show","yAxis","inverse","axisLine","axisTick","splitLine","axisLabel","rish","lg","backgroundColor","borderRadius","align","width","height","textStyle","fontSize","series","name","yAxisIndex","barCategoryGap","barWidth","itemStyle","normal","barBorderRadius","params","num","length","dataIndex","label","position","formatter","borderColor","borderWidth","option","setOption","minWidth"],"sources":["D:/Zry/Works/person-density/src/compoenets/ReactRightBarChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactECharts from 'echarts-for-react';\r\nexport default function ReactRightBarChart(props) {\r\n    let valdata = [102, 150, 210, 193]; // 总人数\r\n    let titleNames = [\"三月\", \"六月\", \"九月\", \"十二月\"];\r\n    let data = [70, 34, 60, 78]; // 占比\r\n    let myColor = [\"#1089E7\", \"#F57474\", \"#56D0E3\", \"#F8B448\", \"#8B78F6\"];\r\n    const DEFAULT_OPTION = {\r\n        color: [\"#2f89cf\"],\r\n        tooltip: {\r\n            trigger: \"axis\",\r\n            axisPointer: {\r\n                // 坐标轴指示器，坐标轴触发有效\r\n                type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\r\n            }\r\n        },\r\n        grid: {\r\n            left: \"22%\",\r\n            top: \"10%\",\r\n            bottom: \"10%\"\r\n        },\r\n        xAxis: [\r\n            {\r\n                show: false\r\n            }\r\n        ],\r\n        yAxis: [\r\n            {\r\n                show: true,\r\n                inverse: true,\r\n                data: titleNames,\r\n                // y轴本身的线\r\n                axisLine: {\r\n                    show: false\r\n                },\r\n                // 不显示刻度\r\n                axisTick: {\r\n                    show: false\r\n                },\r\n                // y轴分割线\r\n                splitLine: {\r\n                    show: false\r\n                },\r\n                axisLabel: {\r\n                    color: \"#fff\",\r\n                    rish: {\r\n                        lg: {\r\n                            backgroundColor: \"#339911\",\r\n                            color: \"#fff\",\r\n                            borderRadius: 15,\r\n                            // padding: 5,\r\n                            align: \"center\",\r\n                            width: 15,\r\n                            height: 15\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                show: true,\r\n                inverse: true,\r\n                data: valdata,\r\n                axisLabel: {\r\n                    textStyle: {\r\n                        fontSize: 12,\r\n                        color: \"#fff\"\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        series: [\r\n            {\r\n                name: \"条\",\r\n                type: \"bar\",\r\n                yAxisIndex: 0,\r\n                data: data,\r\n                // 柱子之间的距离\r\n                barCategoryGap: 50,\r\n                // 柱子的宽度\r\n                barWidth: 10,\r\n                // 柱子的样式\r\n                itemStyle: {\r\n                    normal: {\r\n                        barBorderRadius: 20,\r\n                        // 柱子的颜色\r\n                        color: function (params) {\r\n                            let num = myColor.length;\r\n                            return myColor[params.dataIndex % num];\r\n                        }\r\n                    }\r\n                },\r\n                // 图形上的文字\r\n                label: {\r\n                    normal: {\r\n                        show: true,\r\n                        // 在内部显示\r\n                        position: \"inside\",\r\n                        // {c} 会自动解析为 data里面的数据\r\n                        formatter: \"{c}%\"\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                name: \"框\",\r\n                type: \"bar\",\r\n                yAxisIndex: 1,\r\n                barCategoryGap: 50,\r\n                data: [100, 100, 100, 100, 100],\r\n                barWidth: 15,\r\n                itemStyle: {\r\n                    normal: {\r\n                        color: \"none\",\r\n                        borderColor: \"#00c1de\",\r\n                        borderWidth: 3,\r\n                        barBorderRadius: 15\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n\r\n    const [option, setOption] = useState(DEFAULT_OPTION);\r\n\r\n    return <ReactECharts\r\n        option={option}\r\n        style={{ width: 300, height: 300, minWidth: 300 }}\r\n    />;\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}