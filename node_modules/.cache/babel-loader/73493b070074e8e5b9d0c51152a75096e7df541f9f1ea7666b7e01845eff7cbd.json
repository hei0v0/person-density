{"ast":null,"code":"var _jsxFileName = \"D:\\\\Zry\\\\Works\\\\person-density\\\\src\\\\compoenets\\\\ReactLeftLineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport { cloneDeep } from 'lodash'; // 这里因为lodash版本不一样的问题所以引入方式和官网不一样\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReactLeftLineChart(props) {\n  _s();\n  const data = {\n    year: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120], [1.04, 1.74, 4.39, 5.83, 3.91, 10, 9.13, 10, 5.22, 10, 9, 13, 5.22]]\n  };\n  const {\n    number,\n    crowded,\n    isEnd\n  } = props;\n  const fetchNewData = () => {\n    const axisData = new Date().toLocaleTimeString().replace(/^\\D*/, '');\n    const newOption = cloneDeep(option); // 一定要进行深拷贝\n    const data0 = newOption.series[0].data;\n    const data1 = newOption.series[1].data;\n    data0.shift(); // 删除第一个元素\n    data0.push(number); // 在数组末尾添加元素\n    data1.shift(); // 删除第一个元素\n    data1.push(crowded); // 在数组末尾添加元素\n    newOption.xAxis[0].data.shift(); // 删除第一个元素\n    newOption.xAxis[0].data.push(axisData); // 在数组末尾添加元素\n\n    setOption(newOption);\n  };\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (!isEnd) {\n        fetchNewData();\n      }\n    }, 500);\n    return () => clearInterval(timer);\n  });\n  const DEFAULT_OPTION = {\n    color: [\"#00f2f1\", \"#ed3f35\"],\n    tooltip: {\n      // 通过坐标轴来触发\n      trigger: \"axis\"\n    },\n    legend: {\n      // 距离容器10%\n      right: \"10%\",\n      // 修饰图例文字的颜色\n      textStyle: {\n        color: \"#4c9bfd\"\n      }\n      // 如果series 里面设置了name，此时图例组件的data可以省略\n      // data: [\"邮件营销\", \"联盟广告\"]\n    },\n\n    grid: {\n      top: \"20%\",\n      left: \"3%\",\n      right: \"4%\",\n      bottom: \"3%\",\n      show: true,\n      borderColor: \"#012f4a\",\n      containLabel: true\n    },\n    xAxis: [{\n      type: 'category',\n      boundaryGap: true,\n      data: function () {\n        let now = new Date();\n        let res = [];\n        let len = 12;\n        while (len--) {\n          res.unshift(now.toLocaleTimeString().replace(/^\\D*/, ''));\n          now = new Date(now - 2000);\n        }\n        return res;\n      }()\n    }],\n    yAxis: [{\n      type: \"value\",\n      max: 400,\n      min: 0,\n      boundaryGap: [0.2, 0.2],\n      // 修改y轴分割线的颜色\n      splitLine: {\n        lineStyle: {\n          color: \"#012f4a\"\n        }\n      }\n    }],\n    series: [{\n      name: \"区域人数\",\n      type: \"line\",\n      // 是否让线条圆滑显示\n      smooth: true,\n      yAxisIndex: 0,\n      animationEasing: 'elasticOut',\n      animationDelay: function (idx) {\n        return idx * 10;\n      },\n      animationDelayUpdate: function (idx) {\n        return idx * 10;\n      },\n      data: data.year[0]\n    }, {\n      name: \"密集人数\",\n      type: \"line\",\n      smooth: true,\n      data: data.year[1]\n    }]\n  };\n  const [option, setOption] = useState(DEFAULT_OPTION);\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: option,\n    style: {\n      width: 300,\n      height: 300,\n      minWidth: 300\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 12\n  }, this);\n}\n_s(ReactLeftLineChart, \"tlCzAa2rfXcuyp7R4FMQKnM8t8s=\");\n_c = ReactLeftLineChart;\n;\nvar _c;\n$RefreshReg$(_c, \"ReactLeftLineChart\");","map":{"version":3,"names":["React","useState","useEffect","ReactECharts","cloneDeep","ReactLeftLineChart","props","data","year","number","crowded","isEnd","fetchNewData","axisData","Date","toLocaleTimeString","replace","newOption","option","data0","series","data1","shift","push","xAxis","setOption","timer","setInterval","clearInterval","DEFAULT_OPTION","color","tooltip","trigger","legend","right","textStyle","grid","top","left","bottom","show","borderColor","containLabel","type","boundaryGap","now","res","len","unshift","yAxis","max","min","splitLine","lineStyle","name","smooth","yAxisIndex","animationEasing","animationDelay","idx","animationDelayUpdate","width","height","minWidth"],"sources":["D:/Zry/Works/person-density/src/compoenets/ReactLeftLineChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactECharts from 'echarts-for-react';\r\nimport { cloneDeep } from 'lodash';// 这里因为lodash版本不一样的问题所以引入方式和官网不一样\r\nexport default function ReactLeftLineChart(props) {\r\n    const data = {\r\n        year: [\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120],\r\n            [1.04, 1.74, 4.39, 5.83, 3.91, 10, 9.13, 10, 5.22, 10, 9, 13, 5.22]\r\n        ]\r\n    };\r\n    const { number, crowded, isEnd } = props;\r\n\r\n    const fetchNewData = () => {\r\n        const axisData = (new Date()).toLocaleTimeString().replace(/^\\D*/, '');\r\n        const newOption = cloneDeep(option); // 一定要进行深拷贝\r\n        const data0 = newOption.series[0].data;\r\n        const data1 = newOption.series[1].data;\r\n        data0.shift();// 删除第一个元素\r\n        data0.push(number);// 在数组末尾添加元素\r\n        data1.shift(); // 删除第一个元素\r\n        data1.push(crowded);// 在数组末尾添加元素\r\n        newOption.xAxis[0].data.shift();// 删除第一个元素\r\n        newOption.xAxis[0].data.push(axisData);// 在数组末尾添加元素\r\n\r\n        setOption(newOption);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            if (!isEnd) {\r\n                fetchNewData();\r\n            }\r\n        }, 500);\r\n        return () => clearInterval(timer);\r\n    })\r\n\r\n    const DEFAULT_OPTION = {\r\n        color: [\"#00f2f1\", \"#ed3f35\"],\r\n        tooltip: {\r\n            // 通过坐标轴来触发\r\n            trigger: \"axis\"\r\n        },\r\n        legend: {\r\n            // 距离容器10%\r\n            right: \"10%\",\r\n            // 修饰图例文字的颜色\r\n            textStyle: {\r\n                color: \"#4c9bfd\"\r\n            }\r\n            // 如果series 里面设置了name，此时图例组件的data可以省略\r\n            // data: [\"邮件营销\", \"联盟广告\"]\r\n        },\r\n        grid: {\r\n            top: \"20%\",\r\n            left: \"3%\",\r\n            right: \"4%\",\r\n            bottom: \"3%\",\r\n            show: true,\r\n            borderColor: \"#012f4a\",\r\n            containLabel: true\r\n        },\r\n\r\n        xAxis: [{\r\n            type: 'category',\r\n            boundaryGap: true,\r\n            data: (function () {\r\n                let now = new Date();\r\n                let res = [];\r\n                let len = 12;\r\n                while (len--) {\r\n                    res.unshift(now.toLocaleTimeString().replace(/^\\D*/, ''));\r\n                    now = new Date(now - 2000);\r\n                }\r\n                return res;\r\n            })()\r\n        }],\r\n        yAxis: [\r\n            {\r\n                type: \"value\",\r\n                max: 400,\r\n                min: 0,\r\n                boundaryGap: [0.2, 0.2],\r\n                // 修改y轴分割线的颜色\r\n                splitLine: {\r\n                    lineStyle: {\r\n                        color: \"#012f4a\"\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        series: [\r\n            {\r\n                name: \"区域人数\",\r\n                type: \"line\",\r\n                // 是否让线条圆滑显示\r\n                smooth: true,\r\n                yAxisIndex: 0,\r\n                animationEasing: 'elasticOut',\r\n                animationDelay: function (idx) {\r\n                    return idx * 10;\r\n                },\r\n                animationDelayUpdate: function (idx) {\r\n                    return idx * 10;\r\n                },\r\n                data: data.year[0]\r\n            },\r\n            {\r\n                name: \"密集人数\",\r\n                type: \"line\",\r\n                smooth: true,\r\n                data: data.year[1]\r\n            }\r\n        ]\r\n    }\r\n\r\n    const [option, setOption] = useState(DEFAULT_OPTION);\r\n\r\n    return <ReactECharts\r\n        option={option}\r\n        style={{ width: 300, height: 300, minWidth: 300 }}\r\n    />;\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}